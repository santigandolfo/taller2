swagger: '2.0'
info:
  description: ''
  version: 1.0.0
  title: Fiuber Application Server
  termsOfService: 'http://swagger.io/terms/'
  contact:
    email: fiuber@gmail.com
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
host: fiuber
basePath:
tags:
  - name: security
    description: Security operations
  - name: user
    description: Operations about users
  - name: rider
    description: Operations about riders
  - name: driver
    description: Operations about drivers
  - name: request
    description: Operations about requests
  - name: trip
    description: Operations about trips
schemes:
  - http
consumes:
  - application/json
produces:
  - application/json
securityDefinitions:
  Authorization:
    type: apiKey
    in: header
    name: Authorization
paths:
  /security:
    post:
      tags:
        - security
      summary: User login
      description: ''
      operationId: login
      parameters:
        - in: body
          name: body
          description: Credentials used to log in in the system
          required: true
          schema:
            $ref: '#/definitions/Credentials'
      responses:
        '200':
          description: Succesful login
          schema:
            type: string
        '403':
          description: Username or password is incorrect
  '/security/{userID}':
    delete:
      tags:
        - security
      summary: User logout
      description: ''
      operationId: logout
      security:
        - Authorization: []
      parameters:
        - name: userID
          in: path
          description: User ID to delete
          required: true
          type: string
      responses:
        '204':
          description: Succesful logout
        '403':
          description: Unauthorized
        '404':
          description: User not found
  /users:
    post:
      tags:
        - user
      summary: Register a new user
      description: ''
      operationId: addUser
      parameters:
        - in: body
          name: body
          description: User object that needs to be registered into the system
          required: true
          schema:
            $ref: '#/definitions/UserCreate'
      responses:
        '201':
          description: Successful user registration
        '422':
          description: Error
  '/users/{userID}':
    get:
      tags:
        - user
      summary: Find user by ID
      description: Returns a single user
      operationId: getUserById
      parameters:
        - name: userID
          in: path
          description: ID of user to return
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/User'
        '404':
          description: User not found
    delete:
      tags:
        - user
      summary: Deletes a user
      description: ''
      operationId: deleteUser
      security:
        - Authorization: []
      parameters:
        - name: userID
          in: path
          description: User ID to delete
          required: true
          type: string
      responses:
        '204':
          description: User deleted
        '403':
          description: Unauthorized
        '404':
          description: User not found
    put:
      tags:
        - user
      summary: Update user's profile
      description: ''
      operationId: updateUser
      security:
        - Authorization: []
      parameters:
        - name: userID
          in: path
          description: ID of user to update
          required: true
          type: string
        - in: body
          name: body
          description: User object that needs to be updated into the system
          required: true
          schema:
            $ref: '#/definitions/UserUpdate'
      responses:
        '204':
          description: User updated
        '403':
          description: Unauthorized
        '404':
          description: User not found
  '/users/{userID}/coordinates':
    put:
      tags:
        - user
      summary: Update user's gps coordinates
      description: ''
      operationId: updateUserCoordinates
      security:
        - Authorization: []
      parameters:
        - name: userID
          in: path
          description: ID of user to update
          required: true
          type: string
        - in: body
          name: body
          description: New gps coordinates
          required: true
          schema:
            $ref: '#/definitions/Coordinates'
      responses:
        '204':
          description: User's coordinates updated
        '403':
          description: Unauthorized
        '404':
          description: User not found
  '/riders/{riderID}/request':
    post:
      tags:
        - rider
        - request
      summary: Submit a trip request
      description: ''
      operationId: submitRequest
      security:
        - Authorization: []
      parameters:
        - name: riderID
          in: path
          description: ID of the rider/user
          required: true
          type: string
        - in: body
          name: body
          description: Information about the trip requested
          required: true
          schema:
            $ref: '#/definitions/Request'
      responses:
        '204':
          description: Request submitted
        '403':
          description: Unauthorized
        '404':
          description: Rider not found
  '/drivers/{driverID}/cars':
    post:
      tags:
        - driver
      summary: Register driver's car information
      description: ''
      operationId: RegisterDriversCar
      security:
        - Authorization: []
      parameters:
        - name: driverID
          in: path
          description: ID of the driver/user
          required: true
          type: string
        - in: body
          name: body
          description: car object that needs to be updated
          required: true
          schema:
            $ref: '#/definitions/Car'
      responses:
        '204':
          description: Driver's car information updated
        '403':
          description: Unauthorized
        '404':
          description: Driver not found
  '/drivers/{driverID}/cars/{carID}':
    delete:
      tags:
        - driver
      summary: Delete driver's car information
      description: ''
      operationId: DeleteDriversCar
      security:
        - Authorization: []
      parameters:
        - name: driverID
          in: path
          description: ID of the driver/user
          required: true
          type: string
        - name: carID
          in: path
          description: ID of the car
          required: true
          type: integer
      responses:
        '200':
          description: Driver's car information deleted
        '401':
          description: Unauthorized
        '404':
          description: Driver/car not found
  '/drivers/{driverID}/trip':
    put:
      tags:
        - trip
        - driver
      summary: Start a trip
      description: ''
      operationId: startTrip
      security:
        - Authorization: []
      parameters:
        - in: path
          name: driverID
          description: ID of the driver/user
          required: true
          type: string
        - in: body
          name: body
          description: Trip object that needs to be registered into the system
          required: true
          schema:
            $ref: '#/definitions/Trip'
      responses:
        '204':
          description: Trip registered
        '403':
          description: Unauthorized
        '404':
          description: Driver not found
    delete:
      tags:
        - trip
        - driver
      summary: Finish and Collect a trip
      description: ''
      operationId: finishTrip
      security:
        - Authorization: []
      parameters:
        - in: path
          name: driverID
          description: ID of the driver/user
          required: true
          type: string
      responses:
        '204':
          description: OK
        '403':
          description: Unauthorized
        '404':
          description: Driver not found
  '/drivers/{driverID}':
    patch:
      tags:
        - driver
      summary: Change the driver's duty status
      description: ''
      operationId: changeDriverStatus
      security:
        - Authorization: []
      parameters:
        - in: path
          name: driverID
          description: ID of the driver/user
          required: true
          type: string
        - in: body
          name: body
          description: new status
          required: true
          schema:
            type: string
      responses:
        '204':
          description: status changed
        '403':
          description: Unauthorized
        '404':
          description: Driver not found
  /drivers/available:
    get:
      tags:
        - driver
      summary: Return available drivers
      description: ''
      operationId: getDrivers
      security:
        - Authorization: []
      parameters: []
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/User'
  '/requests/{requestID}':
    delete:
      tags:
        - request
      summary: Cancel a request on a trip that has not started yet (but was assigned)
      description: ''
      operationId: cancelRequest
      parameters:
        - in: path
          name: requestID
          description: ID of the corresponding request
          required: true
          type: string
      responses:
        '203':
          description: successful operation
        '404':
          description: Request not found
  '/requests/{requestID}/costEstimate':
    get:
      tags:
        - request
      summary: Return an estimated cost of the ride
      description: ''
      operationId: getCostEstimation
      parameters:
        - in: path
          name: requestID
          description: ID of the corresponding request
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            type: number
            format: float
        '404':
          description: Request not found
definitions:
  Credentials:
    type: object
    properties:
      username:
        type: string
      password:
        type: string
    required:
      - username
      - password
  User:
    type: object
    properties:
      username:
        type: string
      firstName:
        type: string
      lastName:
        type: string
      birtdate:
        type: string
        format: date
      email:
        type: string
      password:
        type: string
      type:
        type: string
        description: Passenger or Driver
        enum:
          - passenger
          - driver
      country:
        type: string
      image:
        type: string
        format: base64
  UserCreate:
    type: object
    properties:
      username:
        type: string
      firstName:
        type: string
      lastName:
        type: string
      birtdate:
        type: string
        format: date
      email:
        type: string
      password:
        type: string
      type:
        type: string
        description: Passenger or Driver
        enum:
          - passenger
          - driver
      country:
        type: string
      image:
        type: string
        format: base64
    required:
      - username
      - password
      - email
      - type
  UserUpdate:
    type: object
    properties:
      firstName:
        type: string
      lastName:
        type: string
      birtdate:
        type: string
        format: date
      email:
        type: string
      password:
        type: string
      country:
        type: string
      image:
        type: string
        format: base64
  Car:
    type: object
    properties:
      brand:
        type: string
      model:
        type: string
      color:
        type: string
      plate:
        type: string
      year:
        type: integer
        format: int32
  Coordinates:
    type: object
    properties:
      latitude:
        type: number
        format: float
      longitude:
        type: number
        format: float
  Request:
    type: object
    properties:
      latInit:
        type: number
        format: float
      longInit:
        type: number
        format: float
      latFinal:
        type: number
        format: float
      longFinal:
        type: number
        format: float
  Trip:
    type: object
    properties:
      requestID:
        type: integer
        format: int32
  Route:
    type: object
externalDocs:
  description: Find out more about Swagger
  url: 'http://swagger.io'
